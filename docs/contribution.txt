***********************
Contribution Guidelines
***********************

.. include:: md2rst.txt

Git Commit Message
==================

Begin Git commit messages with one of the following headings:

* BUG: bug fix
* DOC: documentation
* FEAT: feature
* MAINT: maintenance
* TST: tests
* REL: release
* WIP: work-in-progress

For example:

.. code:: bash

   git commit -m "FEAT: short intent of new feature"
   git commit -m "BUG: fixes nasty bug"
   git commit -m "DOC: adds documentation for feature"

Git Branch Names
================

When creating branches use one of the following naming conventions. When in
doubt use ``feature/<description>``.

* bugfix/\<description>
* feature/\<description>
* release/\<description>

reStructured Text
=================

Sphinx reads in docstrings and other special portions of the code as
reStructured text. Developers should follow styles in this `Sphinx style
guide`_.

Style Guide
===========

.. include:: md2rst.txt

This project does not yet have a full style guide. Generally, wherever a style can't be inferred from surrounding code
this project falls back to `PEP-8`_-like styles. There are two notable exceptions to the notional PEP-8 fall back:

1. `Doxygen`_ style docstrings are required for automated, API from source documentation.
2. This project prefers expansive whitespace surrounding parentheses, braces, and brackets.

   * No leading space between a function and the argument list.
   * One space following an open paranthesis ``(``, brace ``{``, or bracket
     ``[``
   * One space leading a close paranthesis ``)``, brace ``}``, or bracket ``]``

An example of the whitespace style:

.. code:: c++

   my_function( arg1, { arg2, arg3 }, arg4 );

The following ``sed`` commands may be useful for updating white space, but must
be used with care. The developer is recommended to use a unique git commit
between each command with a corresponding review of the changes and a unit test
run.

* Trailing space for open paren/brace/bracket

.. code:: bash

   sed -i 's/\([({[]\)\([^ ]\)/\1 \2/g' <list of files to update>

* Leading space for close paren/brace/bracket

.. code:: bash

   sed -i 's/\([^ ]\)\([)}\]]\)/\1 \2/g' <list of files to update>

* White space between adjacent paren/brace/bracket

.. code:: bash

   sed -i 's/\([)}\]]\)\([)}\]]\)/\1 \2/g' <list of files to update>
